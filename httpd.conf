_fine_zh_CN20170301V1


#
# This is the main Apache HTTP server configuration file.  It contains the
# configuration directives that give the server its instructions.
# See <URL:http://httpd.apache.org/docs/2.4/> for detailed information.
# In particular, see 
# <URL:http://httpd.apache.org/docs/2.4/mod/directives.html>
# for a discussion of each configuration directive.
#----------------------
#这个是Apache HTTP server的主配置文件，它包含了控制服务器的配置指令。
#请参考<URL:http://httpd.apache.org/docs/2.4/>来获取更多信息
#尤其是请看一下
#<URL:http://httpd.apache.org/docs/2.4/mod/directives.html>
#来看一下 关于每个配置指令的讨论
#---------------------
#




#
#
# Do NOT simply read the instructions in here without understanding
# what they do.  They're here only as hints or reminders.  If you are unsure
# consult the online docs. You have been warned. 
#---------------------- 
#千万不要他妈的简单读一下这个说明，然后还根本就不理解他们要表达什么意思。
#这里的说明仅仅是一个小提醒。如果你不清楚，请查阅官方文档。
#妈了巴子的 我已经警告你了。
#---------------------- 
#




#
# Configuration and logfile names: If the filenames you specify for many
# of the server's control files begin with "/" (or "drive:/" for Win32), the
# server will use that explicit path.  If the filenames do *not* begin
# with "/", the value of ServerRoot is prepended -- so 'log/access_log'
# with ServerRoot set to '/www' will be interpreted by the
# server as '/www/log/access_log', where as '/log/access_log' will be
# interpreted as '/log/access_log'.
#---------------------- 
#配置文件和日志文件名称：
#如果在该配置文件中 你指定的服务器配置文件名称是以“/”开头的（或者在Win32系统上 像后面这样“C:/”）
#服务将会使用明确的路径。如果路径*没有*以"/"开头，那么 服务器就会考虑 从ServerRoot开始计算路径。
#这样的话 如果是'log/access_log'这样的字段出现在配置文件中，而同时ServerRoot的配置字段又是'/www'
#这种情况下服务器将会理解为/www/log/access_log 
#如果你想让服务器把日志写到系统的'/log/access_log'这个文件里面，那么请在对应位置填写绝对路径'/log/access_log'
#




#---------------------- 
#
# ServerRoot: The top of the directory tree under which the server's
# configuration, error, and log files are kept.
#---------------------- 
#ServerRoot:
#这个是相关树状配置文件结构的 根。其中包含了 配置文件  日志 错误日志等等。
#---------------------- 
#
# Do not add a slash at the end of the directory path.  If you point
# ServerRoot at a non-local disk, be sure to specify a local disk on the
# Mutex directive, if file-based mutexes are used.  If you wish to share the
# same ServerRoot for multiple httpd daemons, you will need to change at
# least PidFile.
#---------------------- 
#不要在路径最后添加一个斜线。如果你的ServerRoot并不是指向本地磁盘，请确保在互斥的命令上指定一个本地磁盘。
#如果file-base 互斥被应用，如果你希望对于多个httpd的守护进程共享同一个 ServerRoot。请至少改变一下PidFile。
#---------------------- 
ServerRoot "/etc/httpd"




#
#
# Listen: Allows you to bind Apache to specific IP addresses and/or
# ports, instead of the default. See also the <VirtualHost>
# directive.
#
# Change this to Listen on specific IP addresses as shown below to 
# prevent Apache from glomming onto all bound IP addresses.
#
#Listen 12.34.56.78:80
#---------------------- 
#监听：
#允许你绑定Apache 到指定的IP地址或者端口，来替代掉默认的设置选项。
#有兴趣的话可以看看<VirtualHost>相关配置段
#
#像下面这样修改配置来监听指定的端口，这样就能够防止Apache 来监听所有的IP地址了。
#
Listen 80




#
# Dynamic Shared Object (DSO) Support
#
# To be able to use the functionality of a module which was built as a DSO you
# have to place corresponding `LoadModule' lines at this location so the
# directives contained in it are actually available _before_ they are used.
# Statically compiled modules (those listed by `httpd -l') do not need
# to be loaded here.
#
# Example:
# LoadModule foo_module modules/mod_foo.so
#---------------------- 
#动态共享项目（DSO）支持
#
#如果想要使用相关的DSO模块的功能。你必须写出相关的`LoadModule'行来确定它的位置，
#这样在使用之前，被包含模块里面的指令就已经可用了。
#静态的编译模块（可以使用 httpd -l 来进行查看） 不需要在这里加载。
#
#[root@RHEL72-GUI-1 sos]# httpd -l
#Compiled in modules:
#  core.c
#  mod_so.c
#  http_core.c
#[root@RHEL72-GUI-1 sos]# 
#
#---------------------- 
Include conf.modules.d/*.conf




#
# If you wish httpd to run as a different user or group, you must run
# httpd as root initially and it will switch.  
#
# User/Group: The name (or #number) of the user/group to run httpd as.
# It is usually good practice to create a dedicated user and group for
# running httpd, as with most system services.
#
#----------------------
#如果你想要以不同的用户或组来运行httpd，你必须首先是用root来初始化，之后在切换。
#
#User/Group:
#指定了运行httpd的用户名或者组名（或者 数字ID号码）
#最优的实践方法就是创建专用的用户和组来 运行httpd。其实系统上面的大多数服务都应该这样运行。
#
#----------------------
User apache
Group apache




# 'Main' server configuration
#
# The directives in this section set up the values used by the 'main'
# server, which responds to any requests that aren't handled by a
# <VirtualHost> definition.  These values also provide defaults for
# any <VirtualHost> containers you may define later in the file.
#
# All of these directives may appear inside <VirtualHost> containers,
# in which case these default settings will be overridden for the
# virtual host being defined.
#
#----------------------
#‘主要’ 服务器 配置
#
#在本章节提及到的相关值，都是“主要”服务在使用，也就是意味着相关的选项会影响那些在<VirtualHost>之外的区域。
#也就是说这些默认的设置可以被Virtual host里面的相关设置被覆盖。
#
#----------------------



#
# ServerAdmin: Your address, where problems with the server should be
# e-mailed.  This address appears on some server-generated pages, such
# as error documents.  e.g. admin@your-domain.com
#
#----------------------
#ServerAdmin：
#你的地址，当出现问题的时候，服务器会给这个地址发邮件。
#这个地址会在某些服务器生成的页面上产生，比如错误文档页，
#比如：admin@your-domain.com
#----------------------
ServerAdmin root@localhost




#
# ServerName gives the name and port that the server uses to identify itself.
# This can often be determined automatically, but we recommend you specify
# it explicitly to prevent problems during startup.
#
# If your host doesn't have a registered DNS name, enter its IP address here.
#
#ServerName www.example.com:80
#----------------------
#ServerName 
#将会给出一个名字和端口 被服务器用来 标识自己的。
#通常情况下这些会自动的识别出来，但是我们推荐来指定这些设置，以避免在启动过程中的错误。
#
#如果你的机器没有注册到一个DNS名称，请在这里输入IP地址。
#
#----------------------



#
# Deny access to the entirety of your server's filesystem. You must
# explicitly permit access to web content directories in other 
# <Directory> blocks below.
#
#----------------------
#默认情况下是拒绝访问你的整个服务器的文件系统的。
#你必须使用<Directory>代码块来明确的允许web内容所在的目录是被允许访问的。
#
<Directory />
    AllowOverride none
    Require all denied
</Directory>

#
# Note that from this point forward you must specifically allow
# particular features to be enabled - so if something's not working as
# you might expect, make sure that you have specifically enabled it
# below.
#
#----------------------
#请注意如在这一点上你必须要特别的允许对应的功能是开启的，如果有些功能并没有像你想象的那样工作。
#请确认他们确实是被开启了。
#
#

#
# DocumentRoot: The directory out of which you will serve your
# documents. By default, all requests are taken from this directory, but
# symbolic links and aliases may be used to point to other locations.
#
#----------------------
#DocumentRoot：
#就是那个你希望提供服务的目录，默认情况下所有的连接都所请求的相关都会被请求到这个目录里面。
#但是连接符号可以被用来指向其他的目录。
DocumentRoot "/var/www/html"

#
# Relax access to content within /var/www.
#--------------------
#放松，下面就是 要访问 /var/www的内容了。
<Directory "/var/www">
    AllowOverride None
    # Allow open access:
    Require all granted
</Directory>

# Further relax access to the default document root:
#------------
#更多的放松来访问默认的站点目录。
#



<Directory "/var/www/html">
    #
    # Possible values for the Options directive are "None", "All",
    # or any combination of:
    #   Indexes Includes FollowSymLinks SymLinksifOwnerMatch ExecCGI MultiViews
    #-------------------
    #对于下面的指令来说可用的选项只有 None  和All 或者他们的组合。
    #Indexes Includes FollowSymLinks SymLinksifOwnerMatch ExecCGI MultiViews
    #
    # Note that "MultiViews" must be named *explicitly* --- "Options All"
    # doesn't give it to you.
    #-------------------
    #请注意MultiViews 必须被明确的命名  -----Options All  不会把他们直接给你。
    #
    #
    #

    # The Options directive is both complicated and important.  Please see
    # http://httpd.apache.org/docs/2.4/mod/core.html#options
    # for more information.
    #---------------
    #这些指令 是复杂 并且难懂的，所以请查看 http://httpd.apache.org/docs/2.4/mod/core.html#options 来获取更多的信息。
    Options Indexes FollowSymLinks

    #
    # AllowOverride controls what directives may be placed in .htaccess files.
    # It can be "All", "None", or any combination of the keywords:
    #   Options FileInfo AuthConfig Limit
    #-------------------
    #AllowOverride 控制着 那些放在.htaccess文件中的指令。
    # 它可以是All None 或者 下面关键词的组合。
    #    Options FileInfo AuthConfig Limit
    #
    AllowOverride None

    #
    # Controls who can get stuff from this server.
    #
    Require all granted
</Directory>

#
# DirectoryIndex: sets the file that Apache will serve if a directory
# is requested.
#----------------
# DirectoryIndex: 设置一个文件。这个文件会在Apache 服务得到一个目录的请求而被发出。
#
<IfModule dir_module>
    DirectoryIndex index.html
</IfModule>

#
# The following lines prevent .htaccess and .htpasswd files from being 
# viewed by Web clients. 
#
#--------------------
#下面的行能够防止 .htaccessa和 .htpasswd文件被 网页客户端来访问。
<Files ".ht*">
    Require all denied
</Files>

#
# ErrorLog: The location of the error log file.
# If you do not specify an ErrorLog directive within a <VirtualHost>
# container, error messages relating to that virtual host will be
# logged here.  If you *do* define an error logfile for a <VirtualHost>
# container, that host's errors will be logged there and not here.
#--------------------
#ErrorLog： 错误日志的位置。
#如果你没有在<VirtualHost>容器中指定一个ErrorLog的路径，对应虚拟主机的错误日志将会被存储在这里。
# 你 *必须* 要针对 <VirtualHost>容器区块来指定错误日志文件。
#  这样 主机的错误就会被在这里那里记录，而不是这里记录。
#
ErrorLog "logs/error_log"




#
# LogLevel: Control the number of messages logged to the error_log.
# Possible values include: debug, info, notice, warn, error, crit,
# alert, emerg.
#------------------
#LogLevel：
#控制着 error_log里面要存放多少条日志
#可用的值有：values include: debug, info, notice, warn, error, crit,alert, emerg.
#
LogLevel warn

<IfModule log_config_module>
    #
    # The following directives define some format nicknames for use with
    # a CustomLog directive (see below).
    #------------------
    #下面的命令定义了一些 格式的匿名，用来 使用一个自定义的日志  指令（请参考如下）
    #
    #
    LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"" combined
    LogFormat "%h %l %u %t \"%r\" %>s %b" common

    <IfModule logio_module>
      # You need to enable mod_logio.c to use %I and %O
      #-----------------
      # 如果你要使用%I  %O的话， 你需要启用mod_logio.c
      LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\" %I %O" combinedio
    </IfModule>

    #
    # The location and format of the access logfile (Common Logfile Format).
    # If you do not define any access logfiles within a <VirtualHost>
    # container, they will be logged here.  Contrariwise, if you *do*
    # define per-<VirtualHost> access logfiles, transactions will be
    # logged therein and *not* in this file.
    #
    #CustomLog "logs/access_log" common
    #-----------------------------
    #访问日志的 位置 和 格式（通常的 日志文件格式）
    #如果你没有定义访问日志 在一个<VirtualHost>容器中，他们将会被在这里被记录。
    # 你 *必须* 要针对 <VirtualHost>容器区块来指定错误日志文件。
    #  这样 主机的错误就会被在这里那里记录，而不是这里记录。
    #

    #
    # If you prefer a logfile with access, agent, and referer information
    # (Combined Logfile Format) you can use the following directive.
    #-----------
    #如果你更喜欢日志文件中拥有访问  代理  和 先关信息（已经包含在日志文件格式中。） 你需要用到以下指令。
    CustomLog "logs/access_log" combined
</IfModule>

<IfModule alias_module>
    #
    # Redirect: Allows you to tell clients about documents that used to 
    # exist in your server's namespace, but do not anymore. The client 
    # will make a new request for the document at its new location.
    # Example:
    # Redirect permanent /foo http://www.example.com/bar
    #------------------
    #重定向： 允许你告诉客户端关于 在你的服务器 命名空间中存在的文档。
    #客户端就会在新的位置创建一个请求。
    #比如：
    #重定向参数 /foo http://www.example.com/bar




    #
    # Alias: Maps web paths into filesystem paths and is used to
    # access content that does not live under the DocumentRoot.
    # Example:
    # Alias /webpath /full/filesystem/path
    #
    # If you include a trailing / on /webpath then the server will
    # require it to be present in the URL.  You will also likely
    # need to provide a <Directory> section to allow access to
    # the filesystem path.
    #---------------
    #别名：
    #将网页路径映射到文件系统路径，这个方法用来访问哪些不再DocumentRoot 的内容。
    #比如
    #Alias /webpath /full/filesystem/path




    #
    # ScriptAlias: This controls which directories contain server scripts. 
    # ScriptAliases are essentially the same as Aliases, except that
    # documents in the target directory are treated as applications and
    # run by the server when requested rather than as documents sent to the
    # client.  The same rules about trailing "/" apply to ScriptAlias
    # directives as to Alias.
    #---------------
    #ScriptAlias:
    # 这个控制了 那个目录包含了 服务器脚本。
    # ScriptAliases 本质上和 Aliases一样的。除非目标目录中的文件是被作为应用来看待，并且当请求更多的文档发送到服务端的时候由服务器来处理。
    # 其实就是 Alias 后面末尾追加一个 “/”就成了  这个了。
    ScriptAlias /cgi-bin/ "/var/www/cgi-bin/"

</IfModule>

#
# "/var/www/cgi-bin" should be changed to whatever your ScriptAliased
# CGI directory exists, if you have that configured.
#--------------
#"/var/www/cgi-bin" 应该被修改掉，不管你的ScriptAliased CGI 目录是存在在哪里，你是否有配置。
#
<Directory "/var/www/cgi-bin">
    AllowOverride None
    Options None
    Require all granted
</Directory>

<IfModule mime_module>
    #
    # TypesConfig points to the file containing the list of mappings from
    # filename extension to MIME-type.
    #--------------------
    #TypesConfig
    #  他指向那些包含有 文件扩展名到MIME-type的列表的文件的位置
    #
    TypesConfig /etc/mime.types

    #
    # AddType allows you to add to or override the MIME configuration
    # file specified in TypesConfig for specific file types.
    #---------------------
    #AddType允许你 添加 或者 重写 MIME 配置文件 在TypesConfig 中添加对于文件类型的
    #AddType application/x-gzip .tgz
    #
    # AddEncoding allows you to have certain browsers uncompress
    # information on the fly. Note: Not all browsers support this.
    #--------------------
    #AddEncoding 允许你在运行过程中 拥有浏览器的解压。注意所有的浏览器都支持这些。
    #AddEncoding x-compress .Z
    #AddEncoding x-gzip .gz .tgz
    #
    # If the AddEncoding directives above are commented-out, then you
    # probably should define those extensions to indicate media types:
    #--------------
    #如果AddEncoding 上面的命令 被注释掉了。那么你也许应该对文件的扩展名有定义。
    AddType application/x-compress .Z
    AddType application/x-gzip .gz .tgz




    #
    # AddHandler allows you to map certain file extensions to "handlers":
    # actions unrelated to filetype. These can be either built into the server
    # or added with the Action directive (see below)
    #-----------
    #AddHandler 允许你来映射到对应的文件扩展到“handlers” :
    # 动作不会和文件类型相关，这些可以被设置为服务器内置，或者添加到 Action directive (see below)



    # To use CGI scripts outside of ScriptAliased directories:
    # (You will also need to add "ExecCGI" to the "Options" directive.)
    #------------
    #要想在Script Aliased目录外面使用CGI脚本的话
    #（你也许需要在 Options哪里 添加一个 ExecCGI）
    #AddHandler cgi-script .cgi

    # For type maps (negotiated resources):
    #------------------
    #添加类型映射（协商资源）
    #AddHandler type-map var

    #
    # Filters allow you to process content before it is sent to the client.
    #
    # To parse .shtml files for server-side includes (SSI):
    # (You will also need to add "Includes" to the "Options" directive.)
    #
    AddType text/html .shtml
    AddOutputFilter INCLUDES .shtml
</IfModule>

#
# Specify a default charset for all content served; this enables
# interpretation of all content as UTF-8 by default.  To use the 
# default browser choice (ISO-8859-1), or to allow the META tags
# in HTML content to override this choice, comment out this
# directive:
#
#----------------------
#为网站上的所有服务内容设置默认的字符集。默认情况下 都是用UTF-8.浏览器默认选择(ISO-8859-1)或者允许 原始标签
#在HTML中的内容会覆盖这个选项，注释掉下面的这个命令
AddDefaultCharset UTF-8




<IfModule mime_magic_module>
    #
    # The mod_mime_magic module allows the server to use various hints from the
    # contents of the file itself to determine its type.  The MIMEMagicFile
    # directive tells the module where the hint definitions are located.
    #
    #----------------
    #mod_mime_magic模块允许服务器使用不同的提示从文件的内容本身来确定它的类型。MIMEMagicFile指令告诉提示定义的模块。
    MIMEMagicFile conf/magic
</IfModule>

#
# Customizable error responses come in three flavors:
# 1) plain text 2) local redirects 3) external redirects
#--------
#自定义的错误页面应该有以下三种形式
# 1）简单文字
# 2)  重定向路径
# 3）外部的重定向。
# Some examples: #举一些例子：
#ErrorDocument 500 "The server made a boo boo."
#ErrorDocument 404 /missing.html
#ErrorDocument 404 "/cgi-bin/missing_handler.pl"
#ErrorDocument 402 http://www.example.com/subscription_info.html
#

#
# EnableMMAP and EnableSendfile: On systems that support it, 
# memory-mapping or the sendfile syscall may be used to deliver
# files.  This usually improves server performance, but must
# be turned off when serving from networked-mounted 
# filesystems or if support for these functions is otherwise
# broken on your system.
# Defaults if commented: EnableMMAP On, EnableSendfile Off
#
#EnableMMAP off
#---------------
#EnableMMAP  和 EnableSendfile：
#在系统上支持他，内存映射或者发送文件系统调用会递送文件。
#通常情况下这个设置可以增强服务器的性能表现，但是如果整个网站是建立在网络文件系统上的请务必要关闭这个功能。
#否则将会拖垮你的服务器
#如果都被注销掉了第话，系统默认的配置是： EnableMMAP On, EnableSendfile Off
EnableSendfile on

# Supplemental configuration  #补充的配置选项
#
# Load config files in the "/etc/httpd/conf.d" directory, if any.  #从/etc/httpd/config.d目录下面赞如新的配置作为补充配置，如果有的话。
IncludeOptional conf.d/*.conf
